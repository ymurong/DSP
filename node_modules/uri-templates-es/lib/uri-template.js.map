{"version":3,"file":"uri-template.js","sourceRoot":"","sources":["../../../main/src/lib/uri-template.ts"],"names":[],"mappings":"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","sourcesContent":["export class UriTemplate {\r\n\r\n    private static uriTemplateGlobalModifiers = {\r\n        '+': true,\r\n        '#': true,\r\n        '.': true,\r\n        '/': true,\r\n        ';': true,\r\n        '?': true,\r\n        '&': true\r\n    };\r\n\r\n    private static uriTemplateSuffices = {\r\n        '*': true\r\n    };\r\n\r\n    private readonly textParts: any;\r\n\r\n    private readonly substitutions: any;\r\n\r\n    private readonly unSubstitutions: any;\r\n\r\n    private readonly prefixes: any;\r\n\r\n    constructor(public template: string) {\r\n        let parts = template.split('{');\r\n        this.textParts = [parts.shift()];\r\n        this.prefixes = [];\r\n        this.substitutions = [];\r\n        this.unSubstitutions = [];\r\n        let varNames = [];\r\n        while (parts.length > 0) {\r\n            let part = parts.shift();\r\n            let spec = part.split('}')[0];\r\n            let remainder = part.substring(spec.length + 1);\r\n            let funcs = this.uriTemplateSubstitution(spec);\r\n            this.substitutions.push(funcs.substitution);\r\n            this.unSubstitutions.push(funcs.unSubstitution);\r\n            this.prefixes.push(funcs.prefix);\r\n            this.textParts.push(remainder);\r\n            varNames = varNames.concat(funcs.substitution.varNames);\r\n        }\r\n    }\r\n\r\n    public fill(valueFunction): string {\r\n        if (valueFunction && typeof valueFunction !== 'function') {\r\n            let value = valueFunction;\r\n            valueFunction = function (varName) {\r\n                return value[varName];\r\n            };\r\n        }\r\n\r\n        let result = this.textParts[0];\r\n        for (let i = 0; i < this.substitutions.length; i++) {\r\n            let substitution = this.substitutions[i];\r\n            result += substitution(valueFunction);\r\n            result += this.textParts[i + 1];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public fillFromObject(obj): string {\r\n        return this.fill(obj);\r\n    }\r\n\r\n    public fromUri(substituted): any {\r\n        var result = {};\r\n        for (var i = 0; i < this.textParts.length; i++) {\r\n            var part = this.textParts[i];\r\n            if (substituted.substring(0, part.length) !== part) {\r\n                return undefined;\r\n            }\r\n            substituted = substituted.substring(part.length);\r\n            if (i >= this.textParts.length - 1) {\r\n                if (substituted == '') {\r\n                    break;\r\n                } else {\r\n                    return undefined;\r\n                }\r\n            }\r\n            var nextPart = this.textParts[i + 1];\r\n            var offset = i;\r\n            while (true) {\r\n                if (offset == this.textParts.length - 2) {\r\n                    var endPart = substituted.substring(substituted.length - nextPart.length);\r\n                    if (endPart !== nextPart) {\r\n                        return undefined;\r\n                    }\r\n                    var stringValue = substituted.substring(0, substituted.length - nextPart.length);\r\n                    substituted = endPart;\r\n                } else if (nextPart) {\r\n                    var nextPartPos = substituted.indexOf(nextPart);\r\n                    var stringValue = substituted.substring(0, nextPartPos);\r\n                    substituted = substituted.substring(nextPartPos);\r\n                } else if (this.prefixes[offset + 1]) {\r\n                    var nextPartPos = substituted.indexOf(this.prefixes[offset + 1]);\r\n                    if (nextPartPos === -1) nextPartPos = substituted.length;\r\n                    var stringValue = substituted.substring(0, nextPartPos);\r\n                    substituted = substituted.substring(nextPartPos);\r\n                } else if (this.textParts.length > offset + 2) {\r\n                    // If the separator between this variable and the next is blank (with no prefix), continue onwards\r\n                    offset++;\r\n                    nextPart = this.textParts[offset + 1];\r\n                    continue;\r\n                } else {\r\n                    var stringValue = substituted;\r\n                    substituted = '';\r\n                }\r\n                break;\r\n            }\r\n            this.unSubstitutions[i](stringValue, result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.template;\r\n    }\r\n\r\n    private uriTemplateSubstitution(spec: string): any {\r\n        var modifier = '';\r\n        if (UriTemplate.uriTemplateGlobalModifiers[spec.charAt(0)]) {\r\n            modifier = spec.charAt(0);\r\n            spec = spec.substring(1);\r\n        }\r\n        var separator = '';\r\n        var prefix = '';\r\n        var shouldEscape = true;\r\n        var showVariables = false;\r\n        var trimEmptyString = false;\r\n        if (modifier == '+') {\r\n            shouldEscape = false;\r\n        } else if (modifier == '.') {\r\n            prefix = '.';\r\n            separator = '.';\r\n        } else if (modifier == '/') {\r\n            prefix = '/';\r\n            separator = '/';\r\n        } else if (modifier == '#') {\r\n            prefix = '#';\r\n            shouldEscape = false;\r\n        } else if (modifier == ';') {\r\n            prefix = ';';\r\n            separator = ';',\r\n                showVariables = true;\r\n            trimEmptyString = true;\r\n        } else if (modifier == '?') {\r\n            prefix = '?';\r\n            separator = '&',\r\n                showVariables = true;\r\n        } else if (modifier == '&') {\r\n            prefix = '&';\r\n            separator = '&',\r\n                showVariables = true;\r\n        }\r\n\r\n        var varNames = [];\r\n        var varList = spec.split(',');\r\n        var varSpecs = [];\r\n        var varSpecMap = {};\r\n        for (var i = 0; i < varList.length; i++) {\r\n            var varName = varList[i];\r\n            var truncate = null;\r\n            if (varName.indexOf(':') != -1) {\r\n                var parts = varName.split(':');\r\n                varName = parts[0];\r\n                truncate = parseInt(parts[1]);\r\n            }\r\n            var suffices = {};\r\n            while (UriTemplate.uriTemplateSuffices[varName.charAt(varName.length - 1)]) {\r\n                suffices[varName.charAt(varName.length - 1)] = true;\r\n                varName = varName.substring(0, varName.length - 1);\r\n            }\r\n            var varSpec = {\r\n                truncate: truncate,\r\n                name: varName,\r\n                suffices: suffices\r\n            };\r\n            varSpecs.push(varSpec);\r\n            varSpecMap[varName] = varSpec;\r\n            varNames.push(varName);\r\n        }\r\n        var subFunction = function (valueFunction) {\r\n            var result = \"\";\r\n            var startIndex = 0;\r\n            for (var i = 0; i < varSpecs.length; i++) {\r\n                var varSpec = varSpecs[i];\r\n                var value = valueFunction(varSpec.name);\r\n                if (value == null || (Array.isArray(value) && value.length == 0) || (typeof value == 'object' && Object.keys(value).length == 0)) {\r\n                    startIndex++;\r\n                    continue;\r\n                }\r\n                if (i == startIndex) {\r\n                    result += prefix;\r\n                } else {\r\n                    result += (separator || ',');\r\n                }\r\n                if (Array.isArray(value)) {\r\n                    if (showVariables) {\r\n                        result += varSpec.name + '=';\r\n                    }\r\n                    for (var j = 0; j < value.length; j++) {\r\n                        if (j > 0) {\r\n                            result += varSpec.suffices['*'] ? (separator || ',') : ',';\r\n                            if (varSpec.suffices['*'] && showVariables) {\r\n                                result += varSpec.name + '=';\r\n                            }\r\n                        }\r\n                        result += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, '%21') : UriTemplate.notReallyPercentEncode(value[j]);\r\n                    }\r\n                } else if (typeof value == 'object') {\r\n                    if (showVariables && !varSpec.suffices['*']) {\r\n                        result += varSpec.name + '=';\r\n                    }\r\n                    var first = true;\r\n                    for (var key in value) {\r\n                        if (!first) {\r\n                            result += varSpec.suffices['*'] ? (separator || ',') : ',';\r\n                        }\r\n                        first = false;\r\n                        result += shouldEscape ? encodeURIComponent(key).replace(/!/g, '%21') : UriTemplate.notReallyPercentEncode(key);\r\n                        result += varSpec.suffices['*'] ? '=' : ',';\r\n                        result += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, '%21') : UriTemplate.notReallyPercentEncode(value[key]);\r\n                    }\r\n                } else {\r\n                    if (showVariables) {\r\n                        result += varSpec.name;\r\n                        if (!trimEmptyString || value != \"\") {\r\n                            result += '=';\r\n                        }\r\n                    }\r\n                    if (varSpec.truncate != null) {\r\n                        value = value.substring(0, varSpec.truncate);\r\n                    }\r\n                    result += shouldEscape ? encodeURIComponent(value).replace(/!/g, '%21'): UriTemplate.notReallyPercentEncode(value);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        var guessFunction = function (stringValue, resultObj) {\r\n            if (prefix) {\r\n                if (stringValue.substring(0, prefix.length) == prefix) {\r\n                    stringValue = stringValue.substring(prefix.length);\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n            if (varSpecs.length == 1 && varSpecs[0].suffices['*']) {\r\n                var varSpec = varSpecs[0];\r\n                var varName = varSpec.name;\r\n                var arrayValue = varSpec.suffices['*'] ? stringValue.split(separator || ',') : [stringValue];\r\n                var hasEquals = (shouldEscape && stringValue.indexOf('=') != -1);\t// There's otherwise no way to distinguish between '{value*}' for arrays and objects\r\n                for (var i = 1; i < arrayValue.length; i++) {\r\n                    var stringValue = arrayValue[i];\r\n                    if (hasEquals && stringValue.indexOf('=') == -1) {\r\n                        // Bit of a hack - if we're expecting '=' for key/value pairs, and values can't contain '=', then assume a value has been accidentally split\r\n                        arrayValue[i - 1] += (separator || ',') + stringValue;\r\n                        arrayValue.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n                for (var i = 0; i < arrayValue.length; i++) {\r\n                    var stringValue = arrayValue[i];\r\n                    if (shouldEscape && stringValue.indexOf('=') != -1) {\r\n                        hasEquals = true;\r\n                    }\r\n                    var innerArrayValue = stringValue.split(',');\r\n                    for (var j = 0; j < innerArrayValue.length; j++) {\r\n                        if (shouldEscape) {\r\n                            innerArrayValue[j] = decodeURIComponent(innerArrayValue[j]);\r\n                        }\r\n                    }\r\n                    if (innerArrayValue.length == 1) {\r\n                        arrayValue[i] = innerArrayValue[0];\r\n                    } else {\r\n                        arrayValue[i] = innerArrayValue;\r\n                    }\r\n                }\r\n\r\n                if (showVariables || hasEquals) {\r\n                    var objectValue = resultObj[varName] || {};\r\n                    for (var j = 0; j < arrayValue.length; j++) {\r\n                        var innerValue = stringValue;\r\n                        if (showVariables && !innerValue) {\r\n                            // The empty string isn't a valid variable, so if our value is zero-length we have nothing\r\n                            continue;\r\n                        }\r\n                        if (typeof arrayValue[j] == 'string') {\r\n                            var stringValue = arrayValue[j];\r\n                            var innerVarName = stringValue.split('=', 1)[0];\r\n                            var stringValue = stringValue.substring(innerVarName.length + 1);\r\n                            innerValue = stringValue;\r\n                        } else {\r\n                            var stringValue = arrayValue[j][0];\r\n                            var innerVarName = stringValue.split('=', 1)[0];\r\n                            var stringValue = stringValue.substring(innerVarName.length + 1);\r\n                            arrayValue[j][0] = stringValue;\r\n                            innerValue = arrayValue[j];\r\n                        }\r\n                        if (objectValue[innerVarName] !== undefined) {\r\n                            if (Array.isArray(objectValue[innerVarName])) {\r\n                                objectValue[innerVarName].push(innerValue);\r\n                            } else {\r\n                                objectValue[innerVarName] = [objectValue[innerVarName], innerValue];\r\n                            }\r\n                        } else {\r\n                            objectValue[innerVarName] = innerValue;\r\n                        }\r\n                    }\r\n                    if (Object.keys(objectValue).length == 1 && objectValue[varName] !== undefined) {\r\n                        resultObj[varName] = objectValue[varName];\r\n                    } else {\r\n                        resultObj[varName] = objectValue;\r\n                    }\r\n                } else {\r\n                    if (resultObj[varName] !== undefined) {\r\n                        if (Array.isArray(resultObj[varName])) {\r\n                            resultObj[varName] = resultObj[varName].concat(arrayValue);\r\n                        } else {\r\n                            resultObj[varName] = [resultObj[varName]].concat(arrayValue);\r\n                        }\r\n                    } else {\r\n                        if (arrayValue.length == 1 && !varSpec.suffices['*']) {\r\n                            resultObj[varName] = arrayValue[0];\r\n                        } else {\r\n                            resultObj[varName] = arrayValue;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var arrayValue = (varSpecs.length == 1) ? [stringValue] : stringValue.split(separator || ',');\r\n                var specIndexMap = {};\r\n                for (var i = 0; i < arrayValue.length; i++) {\r\n                    // Try from beginning\r\n                    var firstStarred = 0;\r\n                    for (; firstStarred < varSpecs.length - 1 && firstStarred < i; firstStarred++) {\r\n                        if (varSpecs[firstStarred].suffices['*']) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (firstStarred == i) {\r\n                        // The first [i] of them have no '*' suffix\r\n                        specIndexMap[i] = i;\r\n                        continue;\r\n                    } else {\r\n                        // Try from the end\r\n                        for (var lastStarred = varSpecs.length - 1; lastStarred > 0 && (varSpecs.length - lastStarred) < (arrayValue.length - i); lastStarred--) {\r\n                            if (varSpecs[lastStarred].suffices['*']) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if ((varSpecs.length - lastStarred) == (arrayValue.length - i)) {\r\n                            // The last [length - i] of them have no '*' suffix\r\n                            specIndexMap[i] = lastStarred;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // Just give up and use the first one\r\n                    specIndexMap[i] = firstStarred;\r\n                }\r\n                for (var i = 0; i < arrayValue.length; i++) {\r\n                    var stringValue = arrayValue[i];\r\n                    if (!stringValue && showVariables) {\r\n                        // The empty string isn't a valid variable, so if our value is zero-length we have nothing\r\n                        continue;\r\n                    }\r\n                    var innerArrayValue = stringValue.split(',');\r\n                    var hasEquals = false;\r\n\r\n                    if (showVariables) {\r\n                        var stringValue = innerArrayValue[0]; // using innerArrayValue\r\n                        var varName = stringValue.split('=', 1)[0];\r\n                        var stringValue = stringValue.substring(varName.length + 1);\r\n                        innerArrayValue[0] = stringValue;\r\n                        var varSpec = varSpecMap[varName] || varSpecs[0];\r\n                    } else {\r\n                        var varSpec = varSpecs[specIndexMap[i]];\r\n                        var varName = varSpec.name;\r\n                    }\r\n\r\n                    for (var j = 0; j < innerArrayValue.length; j++) {\r\n                        if (shouldEscape) {\r\n                            innerArrayValue[j] = decodeURIComponent(innerArrayValue[j]);\r\n                        }\r\n                    }\r\n\r\n                    if ((showVariables || varSpec.suffices['*']) && resultObj[varName] !== undefined) {\r\n                        if (Array.isArray(resultObj[varName])) {\r\n                            resultObj[varName] = resultObj[varName].concat(innerArrayValue);\r\n                        } else {\r\n                            resultObj[varName] = [resultObj[varName]].concat(innerArrayValue);\r\n                        }\r\n                    } else {\r\n                        if (innerArrayValue.length == 1 && !varSpec.suffices['*']) {\r\n                            resultObj[varName] = innerArrayValue[0];\r\n                        } else {\r\n                            resultObj[varName] = innerArrayValue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        subFunction['varNames'] = varNames;\r\n        return {\r\n            prefix: prefix,\r\n            substitution: subFunction,\r\n            unSubstitution: guessFunction\r\n        };\r\n    }\r\n\r\n    private static notReallyPercentEncode(string): any {\r\n        return encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {\r\n            return '%' + doubleEncoded.substring(3);\r\n        });\r\n    }\r\n\r\n}\r\n"]}