import { DependencyInjector } from '../../util/dependency-injector';
import { HateoasResourceService } from './hateoas-resource.service';
/**
 * Main resource operation class.
 * Extend this class to create resource service.
 */
export class HateoasResourceOperation {
    constructor(resourceType) {
        this.resourceType = resourceType;
        this.hateoasResourceService = DependencyInjector.get(HateoasResourceService);
    }
    /**
     * {@link HateoasResourceService#getResource}.
     */
    getResource(id, options) {
        return this.hateoasResourceService.getResource(this.resourceType, id, options);
    }
    /**
     * {@link HateoasResourceService#getCollection}.
     */
    getCollection(options) {
        return this.hateoasResourceService.getCollection(this.resourceType, options);
    }
    /**
     * {@link HateoasResourceService#getPage}.
     */
    getPage(options) {
        return this.hateoasResourceService.getPage(this.resourceType, options);
    }
    /**
     * {@link HateoasResourceService#createResource}.
     */
    createResource(requestBody, options) {
        return this.hateoasResourceService.createResource(this.resourceType, requestBody, options);
    }
    /**
     * {@link HateoasResourceService#updateResource}.
     */
    updateResource(entity, requestBody, options) {
        return this.hateoasResourceService.updateResource(entity, requestBody, options);
    }
    /**
     * {@link HateoasResourceService#updateResourceById}.
     */
    updateResourceById(id, requestBody, options) {
        return this.hateoasResourceService.updateResourceById(this.resourceType, id, requestBody, options);
    }
    /**
     * {@link HateoasResourceService#patchResource}.
     */
    patchResource(entity, requestBody, options) {
        return this.hateoasResourceService.patchResource(entity, requestBody, options);
    }
    /**
     * {@link HateoasResourceService#patchResourceById}.
     */
    patchResourceById(id, requestBody, options) {
        return this.hateoasResourceService.patchResourceById(this.resourceType, id, requestBody, options);
    }
    /**
     * {@link HateoasResourceService#deleteResource}.
     */
    deleteResource(entity, options) {
        return this.hateoasResourceService.deleteResource(entity, options);
    }
    /**
     * {@link HateoasResourceService#deleteResourceById}.
     */
    deleteResourceById(id, options) {
        return this.hateoasResourceService.deleteResourceById(this.resourceType, id, options);
    }
    /**
     * {@see ResourceCollectionHttpService#search}
     */
    searchCollection(query, options) {
        return this.hateoasResourceService.searchCollection(this.resourceType, query, options);
    }
    /**
     * {@see PagedResourceCollection#search}
     */
    searchPage(query, options) {
        return this.hateoasResourceService.searchPage(this.resourceType, query, options);
    }
    /**
     * {@see ResourceHttpService#search}
     */
    searchResource(query, options) {
        return this.hateoasResourceService.searchResource(this.resourceType, query, options);
    }
    /**
     * {@see ResourceHttpService#customQuery}
     */
    customQuery(method, query, requestBody, options) {
        return this.hateoasResourceService.customQuery(this.resourceType, method, query, requestBody, options);
    }
    /**
     * {@see ResourceHttpService#customSearchQuery}
     */
    customSearchQuery(method, searchQuery, requestBody, options) {
        return this.hateoasResourceService.customSearchQuery(this.resourceType, method, searchQuery, requestBody, options);
    }
}
//# sourceMappingURL=data:application/json;base64,