import { NgModule } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./config/ngx-hateoas-client-configuration.service";
export { NgxHateoasClientConfigurationService } from './config/ngx-hateoas-client-configuration.service';
export { Resource } from './model/resource/resource';
export { EmbeddedResource } from './model/resource/embedded-resource';
export { ResourceCollection } from './model/resource/resource-collection';
export { PagedResourceCollection } from './model/resource/paged-resource-collection';
export { Include, HttpMethod, CacheMode } from './model/declarations';
export { HateoasResourceOperation } from './service/external/hateoas-resource-operation';
export { HateoasResourceService } from './service/external/hateoas-resource.service';
export { HateoasResource, HateoasEmbeddedResource, HateoasProjection, ProjectionRel } from './model/decorators';
export class NgxHateoasClientModule {
    constructor(config) {
    }
    static forRoot() {
        return {
            ngModule: NgxHateoasClientModule
        };
    }
}
NgxHateoasClientModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NgxHateoasClientModule, deps: [{ token: i1.NgxHateoasClientConfigurationService }], target: i0.ɵɵFactoryTarget.NgModule });
NgxHateoasClientModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NgxHateoasClientModule });
NgxHateoasClientModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NgxHateoasClientModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: NgxHateoasClientModule, decorators: [{
            type: NgModule
        }], ctorParameters: function () { return [{ type: i1.NgxHateoasClientConfigurationService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhhdGVvYXMtY2xpZW50Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1oYXRlb2FzLWNsaWVudC9zcmMvbGliL25neC1oYXRlb2FzLWNsaWVudC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUk5RCxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDckQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDckYsT0FBTyxFQUdMLE9BQU8sRUFDUCxVQUFVLEVBTVYsU0FBUyxFQUNWLE1BQU0sc0JBQXNCLENBQUM7QUFDOUIsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDekYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDckYsT0FBTyxFQUFFLGVBQWUsRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUdoSCxNQUFNLE9BQU8sc0JBQXNCO0lBT2pDLFlBQVksTUFBNEM7SUFDeEQsQ0FBQztJQVBELE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxzQkFBc0I7U0FDakMsQ0FBQztJQUNKLENBQUM7O21IQUxVLHNCQUFzQjtvSEFBdEIsc0JBQXNCO29IQUF0QixzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFEbEMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hIYXRlb2FzQ2xpZW50Q29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2NvbmZpZy9uZ3gtaGF0ZW9hcy1jbGllbnQtY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEhhdGVvYXNSZXNvdXJjZVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvZXh0ZXJuYWwvaGF0ZW9hcy1yZXNvdXJjZS5zZXJ2aWNlJztcblxuZXhwb3J0IHsgTmd4SGF0ZW9hc0NsaWVudENvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9jb25maWcvbmd4LWhhdGVvYXMtY2xpZW50LWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5leHBvcnQgeyBSZXNvdXJjZSB9IGZyb20gJy4vbW9kZWwvcmVzb3VyY2UvcmVzb3VyY2UnO1xuZXhwb3J0IHsgRW1iZWRkZWRSZXNvdXJjZSB9IGZyb20gJy4vbW9kZWwvcmVzb3VyY2UvZW1iZWRkZWQtcmVzb3VyY2UnO1xuZXhwb3J0IHsgUmVzb3VyY2VDb2xsZWN0aW9uIH0gZnJvbSAnLi9tb2RlbC9yZXNvdXJjZS9yZXNvdXJjZS1jb2xsZWN0aW9uJztcbmV4cG9ydCB7IFBhZ2VkUmVzb3VyY2VDb2xsZWN0aW9uIH0gZnJvbSAnLi9tb2RlbC9yZXNvdXJjZS9wYWdlZC1yZXNvdXJjZS1jb2xsZWN0aW9uJztcbmV4cG9ydCB7XG4gIFNvcnQsXG4gIFNvcnRPcmRlcixcbiAgSW5jbHVkZSxcbiAgSHR0cE1ldGhvZCxcbiAgUHJvamVjdGlvblJlbFR5cGUsXG4gIEdldE9wdGlvbixcbiAgUGFnZWRHZXRPcHRpb24sXG4gIFJlcXVlc3RPcHRpb24sXG4gIFJlcXVlc3RQYXJhbSxcbiAgQ2FjaGVNb2RlXG59IGZyb20gJy4vbW9kZWwvZGVjbGFyYXRpb25zJztcbmV4cG9ydCB7IEhhdGVvYXNSZXNvdXJjZU9wZXJhdGlvbiB9IGZyb20gJy4vc2VydmljZS9leHRlcm5hbC9oYXRlb2FzLXJlc291cmNlLW9wZXJhdGlvbic7XG5leHBvcnQgeyBIYXRlb2FzUmVzb3VyY2VTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL2V4dGVybmFsL2hhdGVvYXMtcmVzb3VyY2Uuc2VydmljZSc7XG5leHBvcnQgeyBIYXRlb2FzUmVzb3VyY2UsIEhhdGVvYXNFbWJlZGRlZFJlc291cmNlLCBIYXRlb2FzUHJvamVjdGlvbiwgUHJvamVjdGlvblJlbCB9IGZyb20gJy4vbW9kZWwvZGVjb3JhdG9ycyc7XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgTmd4SGF0ZW9hc0NsaWVudE1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4SGF0ZW9hc0NsaWVudE1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4SGF0ZW9hc0NsaWVudE1vZHVsZVxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IE5neEhhdGVvYXNDbGllbnRDb25maWd1cmF0aW9uU2VydmljZSkge1xuICB9XG5cbn1cbiJdfQ==