export const RESOURCE_NAME_PROP = '__resourceName__';
export const RESOURCE_OPTIONS_PROP = '__options__';
export var Include;
(function (Include) {
    Include["NULL_VALUES"] = "NULL_VALUES";
})(Include || (Include = {}));
/**
 * Supported http methods for custom query.
 */
export var HttpMethod;
(function (HttpMethod) {
    HttpMethod["GET"] = "GET";
    HttpMethod["POST"] = "POST";
    HttpMethod["PUT"] = "PUT";
    HttpMethod["PATCH"] = "PATCH";
})(HttpMethod || (HttpMethod = {}));
/**
 * Additional cache modes.
 */
export var CacheMode;
(function (CacheMode) {
    /**
     * Default mode.
     * When cache enable, then all HTTP GET methods will use cache. Except methods where explicitly passed {useCache : false}.
     */
    CacheMode["ALWAYS"] = "ALWAYS";
    /**
     * This is opposite option for ALWAYS mode.
     * When cache enable, that mode will NOT use cache by default on all HTTP GET methods.
     * Except methods where explicitly passed {useCache : true}.
     */
    CacheMode["ON_DEMAND"] = "ON_DEMAND";
})(CacheMode || (CacheMode = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjbGFyYXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWhhdGVvYXMtY2xpZW50L3NyYy9saWIvbW9kZWwvZGVjbGFyYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLGFBQWEsQ0FBQztBQTZKbkQsTUFBTSxDQUFOLElBQVksT0FFWDtBQUZELFdBQVksT0FBTztJQUNqQixzQ0FBMkIsQ0FBQTtBQUM3QixDQUFDLEVBRlcsT0FBTyxLQUFQLE9BQU8sUUFFbEI7QUF3QkQ7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxVQUVYO0FBRkQsV0FBWSxVQUFVO0lBQ3BCLHlCQUFXLENBQUE7SUFBRSwyQkFBYSxDQUFBO0lBQUUseUJBQVcsQ0FBQTtJQUFFLDZCQUFlLENBQUE7QUFDMUQsQ0FBQyxFQUZXLFVBQVUsS0FBVixVQUFVLFFBRXJCO0FBYUQ7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxTQWFYO0FBYkQsV0FBWSxTQUFTO0lBQ25COzs7T0FHRztJQUNILDhCQUFpQixDQUFBO0lBRWpCOzs7O09BSUc7SUFDSCxvQ0FBdUIsQ0FBQTtBQUN6QixDQUFDLEVBYlcsU0FBUyxLQUFULFNBQVMsUUFhcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZSB9IGZyb20gJy4vcmVzb3VyY2UvcmVzb3VyY2UnO1xuaW1wb3J0IHsgQmFzZVJlc291cmNlIH0gZnJvbSAnLi9yZXNvdXJjZS9iYXNlLXJlc291cmNlJztcbmltcG9ydCB7IEVtYmVkZGVkUmVzb3VyY2UgfSBmcm9tICcuL3Jlc291cmNlL2VtYmVkZGVkLXJlc291cmNlJztcbmltcG9ydCB7IEh0dHBIZWFkZXJzLCBIdHRwUGFyYW1zIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuXG5leHBvcnQgY29uc3QgUkVTT1VSQ0VfTkFNRV9QUk9QID0gJ19fcmVzb3VyY2VOYW1lX18nO1xuZXhwb3J0IGNvbnN0IFJFU09VUkNFX09QVElPTlNfUFJPUCA9ICdfX29wdGlvbnNfXyc7XG5cbi8qKlxuICogUmVzb3VyY2UgbGluayBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGluayB7XG4gIC8qKlxuICAgKiBMaW5rIG5hbWUuXG4gICAqL1xuICBba2V5OiBzdHJpbmddOiBMaW5rRGF0YTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMaW5rRGF0YSB7XG4gIC8qKlxuICAgKiBMaW5rIHVybC5cbiAgICovXG4gIGhyZWY6IHN0cmluZztcbiAgLyoqXG4gICAqIHtAY29kZSB0cnVlfSBpZiA8Yj5ocmVmPC9iPiBoYXMgdGVtcGxhdGUsIHtAY29kZSBmYWxzZX0gb3RoZXJ3aXNlLlxuICAgKi9cbiAgdGVtcGxhdGVkPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBJbnRlcmZhY2UgdGhhdCBhbGxvd3MgdG8gaWRlbnRpZnkgdGhhdCBvYmplY3QgaXMgcmVzb3VyY2Ugd2hlbiBpdCBpcyBoYXMgYSBsaW5rcyBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVzb3VyY2VJZGVudGlmaWFibGUge1xuXG4gIC8qKlxuICAgKiBMaXN0IG9mIGxpbmtzIHJlbGF0ZWQgd2l0aCB0aGUgcmVzb3VyY2UuXG4gICAqL1xuICBfbGlua3M6IExpbms7XG59XG5cbi8qKlxuICogSHR0cCBvcHRpb25zIHRoYXQgdXNlZCBieSBBbmd1bGFyIEh0dHBDbGllbnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSHR0cENsaWVudE9wdGlvbnMge1xuICBoZWFkZXJzPzogSHR0cEhlYWRlcnMgfCB7XG4gICAgW2hlYWRlcjogc3RyaW5nXTogc3RyaW5nIHwgc3RyaW5nW107XG4gIH07XG4gIG9ic2VydmU/OiAnYm9keScgfCAncmVzcG9uc2UnO1xuICBwYXJhbXM/OiBIdHRwUGFyYW1zO1xuICByZXBvcnRQcm9ncmVzcz86IGJvb2xlYW47XG4gIHJlc3BvbnNlVHlwZT86ICdqc29uJztcbiAgd2l0aENyZWRlbnRpYWxzPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBFeHRlbmQge0BsaW5rIEdldE9wdGlvbn0gd2l0aCBwYWdlIHBhcmFtLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2VkR2V0T3B0aW9uIGV4dGVuZHMgR2V0T3B0aW9uIHtcbiAgcGFnZVBhcmFtcz86IFBhZ2VQYXJhbTtcbn1cblxuLyoqXG4gKiBDb250YWlucyBvcHRpb25zIHRoYXQgY2FuIGJlIGFwcGxpZWQgdG8gUE9TVC9QVVQvUEFUQ0gvREVMRVRFIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdE9wdGlvbiB7XG4gIHBhcmFtcz86IFJlcXVlc3RQYXJhbTtcbiAgaGVhZGVycz86IEh0dHBIZWFkZXJzIHwge1xuICAgIFtoZWFkZXI6IHN0cmluZ106IHN0cmluZyB8IHN0cmluZ1tdO1xuICB9O1xuICBvYnNlcnZlPzogJ2JvZHknIHwgJ3Jlc3BvbnNlJztcbiAgcmVwb3J0UHJvZ3Jlc3M/OiBib29sZWFuO1xuICB3aXRoQ3JlZGVudGlhbHM/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIENvbnRhaW5zIGFkZGl0aW9uYWwgb3B0aW9ucyB0aGF0IGNhbiBiZSBhcHBsaWVkIHRvIHRoZSBHRVQgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBHZXRPcHRpb24gZXh0ZW5kcyBSZXF1ZXN0T3B0aW9uIHtcbiAgLyoqXG4gICAqIFNvcnRpbmcgb3B0aW9ucy5cbiAgICovXG4gIHNvcnQ/OiBTb3J0O1xuICB1c2VDYWNoZT86IGJvb2xlYW47XG59XG5cbi8qKlxuICogUmVxdWVzdCBwYXJhbXMgdGhhdCB3aWxsIGJlIGFwcGxpZWQgdG8gdGhlIHJlc3VsdCB1cmwgYXMgaHR0cCByZXF1ZXN0IHBhcmFtcy5cbiAqXG4gKiBTaG91bGQgbm90IGNvbnRhaW5zIHBhcmFtcyBhczogJ3Byb2plY3Rpb24nIGFuZCB7QGxpbmsgUGFnZVBhcmFtfSBwcm9wZXJ0aWVzLlxuICogSWYgd2FudCBwYXNzIHRoaXMgcGFyYW1zIHRoZW4gdXNlIHN1aXRhYmxlIHByb3BlcnRpZXMgZnJvbSB7QGxpbmsgR2V0T3B0aW9ufSBvciB7QGxpbmsgUGFnZWRHZXRPcHRpb259LFxuICogb3RoZXJ3aXNlIGV4Y2VwdGlvbiB3aWxsIGJlIHRocm93bi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0UGFyYW0ge1xuICBbcGFyYW1OYW1lOiBzdHJpbmddOiBSZXNvdXJjZSB8IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBBcnJheTxzdHJpbmc+IHwgQXJyYXk8bnVtYmVyPjtcbn1cblxuLyoqXG4gKiBQYWdlIGNvbnRlbnQgcGFyYW1zLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2VQYXJhbSB7XG4gIC8qKlxuICAgKiBOdW1iZXIgb2YgcGFnZS5cbiAgICovXG4gIHBhZ2U/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFBhZ2Ugc2l6ZS5cbiAgICovXG4gIHNpemU/OiBudW1iZXI7XG59XG5cbi8qKlxuICogUGFnZSBwYXJhbXMgd2l0aCBzb3J0IG9wdGlvbi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTb3J0ZWRQYWdlUGFyYW0ge1xuICAvKipcbiAgICogUGFnZSBjb250ZW50IHBhcmFtcy5cbiAgICovXG4gIHBhZ2VQYXJhbXM/OiBQYWdlUGFyYW07XG4gIC8qKlxuICAgKiBTb3J0aW5nIG9wdGlvbnMuXG4gICAqL1xuICBzb3J0PzogU29ydDtcbn1cblxuZXhwb3J0IHR5cGUgU29ydE9yZGVyID0gJ0RFU0MnIHwgJ0FTQyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU29ydCB7XG4gIC8qKlxuICAgKiBOYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBzb3J0LlxuICAgKi9cbiAgW3Byb3BlcnR5VG9Tb3J0OiBzdHJpbmddOiBTb3J0T3JkZXI7XG59XG5cbi8qKlxuICogUGFnZSByZXNvdXJjZSByZXNwb25zZSBmcm9tIFNwcmluZyBhcHBsaWNhdGlvbi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYWdlRGF0YSB7XG4gIHBhZ2U6IHtcbiAgICBzaXplOiBudW1iZXI7XG4gICAgdG90YWxFbGVtZW50czogbnVtYmVyO1xuICAgIHRvdGFsUGFnZXM6IG51bWJlcjtcbiAgICBudW1iZXI6IG51bWJlcjtcbiAgfTtcbiAgX2xpbmtzPzoge1xuICAgIGZpcnN0OiB7XG4gICAgICBocmVmOiBzdHJpbmdcbiAgICB9O1xuICAgIHByZXY/OiB7XG4gICAgICBocmVmOiBzdHJpbmdcbiAgICB9O1xuICAgIHNlbGY6IHtcbiAgICAgIGhyZWY6IHN0cmluZ1xuICAgIH07XG4gICAgbmV4dD86IHtcbiAgICAgIGhyZWY6IHN0cmluZ1xuICAgIH07XG4gICAgbGFzdDoge1xuICAgICAgaHJlZjogc3RyaW5nXG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGVudW0gSW5jbHVkZSB7XG4gIE5VTExfVkFMVUVTID0gJ05VTExfVkFMVUVTJ1xufVxuXG4vKipcbiAqIEluY2x1ZGUgb3B0aW9ucyB0aGF0IGFsbG93IGNvbmZpZ3VyZSBzaG91bGQgaW5jbHVkZSBvciBub3Qgc29tZSBzcGVjaWZpYyB2YWx1ZXNcbiAqIChlLnEuIG51bGwgdmFsdWVzKS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBWYWx1ZXNPcHRpb24ge1xuICBpbmNsdWRlOiBJbmNsdWRlO1xufVxuXG4vKipcbiAqIFJlcXVlc3QgYm9keSBvYmplY3QuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdEJvZHk8VD4ge1xuICAvKipcbiAgICogQW55IG9iamVjdCB0aGF0IHdpbGwgYmUgcGFzc2VkIGFzIHJlcXVlc3QgYm9keS5cbiAgICovXG4gIGJvZHk6IFQ7XG4gIC8qKlxuICAgKiBVc2UgdGhpcyBwYXJhbSB0byBpbmZsdWVuY2Ugb24gYm9keSB2YWx1ZXMgdGhhdCB5b3Ugd2FudCBpbmNsdWRlIG9yIG5vdC5cbiAgICovXG4gIHZhbHVlc09wdGlvbj86IFZhbHVlc09wdGlvbjtcbn1cblxuLyoqXG4gKiBTdXBwb3J0ZWQgaHR0cCBtZXRob2RzIGZvciBjdXN0b20gcXVlcnkuXG4gKi9cbmV4cG9ydCBlbnVtIEh0dHBNZXRob2Qge1xuICBHRVQgPSAnR0VUJywgUE9TVCA9ICdQT1NUJywgUFVUID0gJ1BVVCcsIFBBVENIID0gJ1BBVENIJ1xufVxuXG50eXBlIE5vblJlc291cmNlUHJvcGVydHlUeXBlPFQ+ID0ge1xuICBbSyBpbiBrZXlvZiBUXTogVFtLXSBleHRlbmRzIEJhc2VSZXNvdXJjZSA/IG5ldmVyIDogSztcbn1ba2V5b2YgVF07XG5cbi8qKlxuICogVHlwZSB0aGF0IGFsbG93ZWQgcmVwcmVzZW50IHJlc291cmNlIHJlbGF0aW9ucyBhcyByZXNvdXJjZSBwcm9qZWN0aW9uIGV4Y2x1ZGluZyB7QGxpbmsgUmVzb3VyY2V9LFxuICoge0BsaW5rIEVtYmVkZGVkUmVzb3VyY2V9IHByb3BzIGFuZCBtZXRob2RzIGZyb20gY3VycmVudCB0eXBlLlxuICovXG5leHBvcnQgdHlwZSBQcm9qZWN0aW9uUmVsVHlwZTxUIGV4dGVuZHMgQmFzZVJlc291cmNlPiA9XG4gIFBpY2s8VCwgRXhjbHVkZTxrZXlvZiBULCBrZXlvZiBSZXNvdXJjZSB8IGtleW9mIEVtYmVkZGVkUmVzb3VyY2U+ICYgTm9uUmVzb3VyY2VQcm9wZXJ0eVR5cGU8VD4+O1xuXG4vKipcbiAqIEFkZGl0aW9uYWwgY2FjaGUgbW9kZXMuXG4gKi9cbmV4cG9ydCBlbnVtIENhY2hlTW9kZSB7XG4gIC8qKlxuICAgKiBEZWZhdWx0IG1vZGUuXG4gICAqIFdoZW4gY2FjaGUgZW5hYmxlLCB0aGVuIGFsbCBIVFRQIEdFVCBtZXRob2RzIHdpbGwgdXNlIGNhY2hlLiBFeGNlcHQgbWV0aG9kcyB3aGVyZSBleHBsaWNpdGx5IHBhc3NlZCB7dXNlQ2FjaGUgOiBmYWxzZX0uXG4gICAqL1xuICBBTFdBWVMgPSAnQUxXQVlTJyxcblxuICAvKipcbiAgICogVGhpcyBpcyBvcHBvc2l0ZSBvcHRpb24gZm9yIEFMV0FZUyBtb2RlLlxuICAgKiBXaGVuIGNhY2hlIGVuYWJsZSwgdGhhdCBtb2RlIHdpbGwgTk9UIHVzZSBjYWNoZSBieSBkZWZhdWx0IG9uIGFsbCBIVFRQIEdFVCBtZXRob2RzLlxuICAgKiBFeGNlcHQgbWV0aG9kcyB3aGVyZSBleHBsaWNpdGx5IHBhc3NlZCB7dXNlQ2FjaGUgOiB0cnVlfS5cbiAgICovXG4gIE9OX0RFTUFORCA9ICdPTl9ERU1BTkQnXG59XG4iXX0=